@using ApwPayroll_Application.Features.Locations.Commands.CreateLocations
@model CreateLocationCommand

@{
    ViewData["Title"] = "Location";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="card">
        <div class="card-header">
            <span class="card-title fw-normal">Add Location</span>
        </div>
        <div class="card-body">
            <form asp-action="CreateLocation" asp-controller="Location" method="post">
                <input type="hidden" asp-for="Id" />
                <div class="container">
                    <div class="row align-items-center">
                        <!-- Name Field -->
                        <div class="col-md-4">
                            <label class="form-label">Name</label>
                            <input type="text" asp-for="Name" class="form-control" placeholder="Enter name" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <!-- Location Type Dropdown -->
                        <div class="col-md-4">
                            <label class="form-label">Location Type</label>
                            <select asp-for="LocationType" class="form-control" id="locationType">
                                <option value="" selected disabled>Select a location type</option>
                                @if (ViewBag.LocationType != null)
                                {
                                    @foreach (var locationType in ViewBag.LocationType)
                                    {
                                        <option value="@locationType.Id">@locationType.Name</option>
                                    }
                                }
                                else
                                {
                                    <option value="" disabled>No location types available</option>
                                }
                            </select>
                            <span asp-validation-for="LocationType" class="text-danger"></span>
                        </div>

                        <!-- Parent Location Dropdown -->
                        <div class="col-md-4">
                            <label class="form-label">Parent</label>
                            <select asp-for="ParentId" class="form-control" id="parentLocation">
                                <option value="" selected disabled>Select a parent location</option>
                            </select>
                            <span asp-validation-for="ParentId" class="text-danger"></span>
                        </div>

                        <!-- Submit Button -->
                        <div class="col-sm-12">
                            <div class="d-flex justify-content-end mt-4">
                                <button type="submit" class="btn btn-success">
                                    @(Model != null && Model.Id.HasValue && Model.Id.Value != 0 ? "Update" : "Add")
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Table for Displaying Locations -->
    <div class="card mt-4">
        <div class="card-header">
            <span class="card-title fw-normal">Locations</span>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-success">
                        <tr>
                            <th class="rounded-start">Sr.No</th>
                            <th>Name</th>
                            <th>Type</th>
                            <th>Parent</th>
                            <th class="rounded-end">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (ViewBag.LocationList != null && ViewBag.LocationList.Count > 0)
                        {
                            @foreach (var item in ViewBag.LocationList)
                            {
                                <tr>
                                    <td>@(ViewBag.LocationList.IndexOf(item) + 1)</td>
                                    <td>@item.Name</td>
                                    <td>@item.LocationType</td>
                                    <td>@item.Parent?.Name</td>
                                    <td>
                                        <a asp-action="LocationView" asp-route-id="@item.Id" class="btn btn-sm btn-info editBtn">
                                            <i class="bi bi-pencil-square"></i>
                                        </a>
                                        <button class="btn btn-sm btn-danger" onclick="confirmDelete('@item.Id','location', '@Url.Action("Delete", "Location")')">
                                            <i class="bi bi-trash-fill"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="5" class="text-center">No locations available</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Scripts Section -->
@section scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            // On change of Location Type
            $('#locationType').change(function () {
                var selectedType = $(this).val();
                var parentLocationDropdown = $('#parentLocation');
                parentLocationDropdown.empty(); // Clear existing options
                parentLocationDropdown.append('<option value="" selected disabled>Select a parent location</option>');

                if (selectedType) {
                    let apiUrl = "";

                    if (selectedType == "1") { // City
                        apiUrl = '@Url.Action("GetCitiesByState", "Location")';
                    } else if (selectedType == "2") { // State
                        apiUrl = '@Url.Action("GetStatesByCountry", "Location")';
                    }

                    if (apiUrl) {
                        $.ajax({
                            url: apiUrl,
                            type: 'GET',
                            success: function (data) {
                                console.log(data);
                                populateDropdown(data, parentLocationDropdown);
                            },
                            error: function () {
                                alert('Failed to retrieve data. Please try again.');
                            }
                        });
                    }
                }
            });

            // Function to populate the Parent dropdown
            function populateDropdown(data, dropdown) {
                $.each(data, function (index, item) {
                    dropdown.append($('<option>', {
                        value: item.id,
                        text: item.name
                    }));
                });
            }
        });
    </script>

    <!-- Delete Confirmation Script -->
    <script>
        function confirmDelete(id, url) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = url + '/' + id;
                }
            });
        }
    </script>
}
