 @using ApwPayroll_Application.Interfaces.Repositories
@using ApwPayroll_Domain.Entities.AspUsers
@using ApwPayroll_Domain.Entities.Notifications
@using Microsoft.AspNetCore.Identity
@inject UserManager<AspUser> _userManager
@inject INotificationRepository _notificationRepository

@{
    var user = await _userManager.GetUserAsync(User);
    IEnumerable<Notification> notificationList = null;
    IList<string> roles = new List<string>();
    string roleName = string.Empty;

    if (user != null)
    {
        roles = await _userManager.GetRolesAsync(user);
        roleName = roles.FirstOrDefault(); // Assuming a user has only one role
    }
}

<style>

    * {
        font-family: "Poppins", "Roboto", Arial, sans-serif;
    }

    .dropdown-menu {
        &.show

    {
        -webkit-animation: fadeIn 0.3s alternate; /* Safari 4.0 - 8.0 */
        animation: fadeIn 0.3s alternate;
    }

    }

    // Complete styles for main navbar toggler and hamburger menu
    .navbar-toggler {
        border: none;
        padding: 0;
        outline: none;
        &:focus

    {
        box-shadow: none;
    }

    .hamburger-toggle {
        position: relative;
        display: inline-block;
        width: 50px;
        height: 50px;
        z-index: 11;
        float: right;
        .hamburger

    {
        position: absolute;
        transform: translate(-50%, -50%) rotate(0deg);
        left: 50%;
        top: 50%;
        width: 50%;
        height: 50%;
        pointer-events: none;
        span

    {
        width: 100%;
        height: 4px;
        position: absolute;
        background: #333;
        border-radius: 2px;
        z-index: 1;
        transition: transform 0.2s cubic-bezier(0.77,0.2,0.05,1.0), background 0.2s cubic-bezier(0.77,0.2,0.05,1.0), all 0.2s ease-in-out;
        left: 0px;
        &:first-child

    {
        top: 10%;
        transform-origin: 50% 50%;
        transform: translate(0% -50%) !important;
    }

    &:nth-child(2) {
        top: 50%;
        transform: translate(0,-50%);
    }

    &:last-child {
        left: 0px;
        top: auto;
        bottom: 10%;
        transform-origin: 50% 50%;
    }

    }

    &.active {
        span

    {
        position: absolute;
        margin: 0;
        &:first-child

    {
        top: 45%;
        transform: rotate(45deg);
    }

    &:nth-child(2) {
        left: 50%;
        width: 0px;
    }

    &:last-child {
        top: 45%;
        transform: rotate(-45deg);
    }

    }
    }
    }
    }
    }


    .icons {
        display: inline-flex;
        margin-left: auto;
        a

    {
        transition: all 0.2s ease-in-out;
        padding: 0.2rem 0.4rem;
        color: #ccc !important;
        text-decoration: none;
        &:hover

    {
        color: white;
        text-shadow: 0 0 30px white;
    }

    }
    }
</style>
<header id="page-topbar">
    <div class="layout-width">
        <div class="navbar-header">
            <div class="d-flex">
                <!-- LOGO -->
                <div class="navbar-brand-box horizontal-logo">
                    <a href="@Url.Action("Index", "Dashboard")" class="logo logo-dark">
                        <span class="logo-sm">
                            <img src="~/assets/images/fevicon.jpg" alt="" height="22">
                        </span>
                        <span class="logo-lg">
                            <img src="~/assets/images/logo-dark.png" alt="" height="17">
                        </span>
                    </a>

                    <a href="@Url.Action("Index", "Dashboard")" class="logo logo-light">
                        <span class="logo-sm">
                            <img src="~/assets/images/fevicon.jpg" alt="" height="22">
                        </span>
                        <span class="logo-lg">
                            <img src="~/assets/images/logo-light.png" alt="" height="17">
                        </span>
                    </a>
                </div>
                <button type="button" class="btn btn-sm px-3 fs-16 header-item vertical-menu-btn topnav-hamburger" id="topnav-hamburger-icon">
                    <span class="hamburger-icon">
                        <span></span>
                        <span></span>
                        <span></span>
                    </span>
                </button>


            </div>

            <div class="d-flex align-items-center">
              
              
                <div class="ms-1 header-item d-none d-sm-flex">
                    <button type="button" class="btn btn-icon btn-topbar btn-ghost-secondary rounded-circle"
                            data-toggle="fullscreen">
                        <i class='bx bx-fullscreen fs-22'></i>
                    </button>
                </div>
                <div class="dropdown topbar-head-dropdown ms-1 header-item" id="notificationDropdown">
                    <button type="button" class="btn btn-icon btn-topbar btn-ghost-secondary rounded-circle"
                            id="page-header-notifications-dropdown" data-bs-toggle="dropdown" aria-haspopup="true"
                            aria-expanded="false">
                        <i class='bx bx-bell fs-22'></i>
                     
                    </button>
                    <div class="dropdown-menu dropdown-menu-lg dropdown-menu-end p-0"
                         aria-labelledby="page-header-notifications-dropdown">

                        <div class="dropdown-head bg-primary bg-pattern rounded-top">
                            <div class="p-3">
                                <div class="row align-items-center">
                                    <div class="col">
                                        <h6 class="m-0 fs-16 fw-semibold text-white"> Notifications </h6>
                                    </div>
                                    <div class="col-auto dropdown-tabs">
                                        <span class="badge bg-light-subtle text-body fs-13">  New</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="tab-content position-relative" id="notificationItemsTabContent">
                           
                            <div class="tab-pane fade p-4" id="alerts-tab" role="tabpanel" aria-labelledby="alerts-tab"></div>

                            <div class="notification-actions" id="notification-actions">
                                <div class="d-flex text-muted justify-content-center">
                                    Select <div id="select-content" class="text-body fw-semibold px-1">0</div> Result <button type="button" class="btn btn-link link-danger p-0 ms-3" data-bs-toggle="modal" data-bs-target="#removeNotificationModal">Remove</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="dropdown ms-sm-3 header-item topbar-user">
                    <button type="button" class="btn" id="page-header-user-dropdown" data-bs-toggle="dropdown"
                            aria-haspopup="true" aria-expanded="false">
                        <span class="d-flex align-items-center">
                            <img class="rounded-circle header-profile-user" src="~/assets/images/users/avatar-9.jpg"
                                 alt="Header Avatar">
                            <span class="text-start ms-xl-2">
                                <span class="d-none d-xl-inline-block ms-1 fw-medium user-name-text">@((user != null ? user.FirstName : "Testing"))</span>
                                @if (roleName != null)
                                {
                                    <span class="d-none d-xl-block ms-1 fs-12 user-name-sub-text">@roleName</span>
                                }
                        </span>
                    </button>
                    <div class="dropdown-menu dropdown-menu-end">
                        <!-- item-->
                        <h6 class="dropdown-header">Welcome @(user != null ? user.FirstName : "Testing")</h6>
                        <a class="dropdown-item" href="@Url.Action("Profile", "Home")">
                            <i class="mdi mdi-account-circle text-muted fs-16 align-middle me-1"></i> <span class="align-middle">Profile</span>
                        </a>
                        <form method="post" asp-action="logout" asp-controller="Administration">
                            <button class="dropdown-item">
                                <i class="mdi mdi-logout text-muted fs-16 align-middle me-1"></i> <span class="align-middle" data-key="t-logout">Logout</span>
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</header>
<!-- removeNotificationModal -->
<div id="removeNotificationModal" class="modal fade zoomIn" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="NotificationModalbtn-close"></button>
            </div>
            <div class="modal-body">
                <div class="mt-2 text-center">
                    <lord-icon src="https://cdn.lordicon.com/gsqxdxog.json" trigger="loop" colors="primary:#f7b84b,secondary:#f06548" style="width:100px;height:100px"></lord-icon>
                    <div class="mt-4 pt-2 fs-15 mx-4 mx-sm-5">
                        <h4>Are you sure ?</h4>
                        <p class="text-muted mx-4 mb-0">Are you sure you want to remove this Notification ?</p>
                    </div>
                </div>
                <div class="d-flex gap-2 justify-content-center mt-4 mb-2">
                    <button type="button" class="btn w-sm btn-light" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn w-sm btn-danger" id="delete-notification">Yes, Delete It!</button>
                </div>
            </div>

        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
@section Script {
    <script>
        document.addEventListener('DOMContentLoaded', function (event) {

            // Hamburger menu
            var navbarToggler = document.querySelectorAll('.navbar-toggler')[0];
            navbarToggler.addEventListener('click', function (e) {
                e.target.children[0].classList.toggle('active');
            });

            // Select the <html> element
            var html = document.querySelectorAll('html')[0];

            // Select the first element with the attribute 'data-bs-toggle-theme'
            var themeToggle = document.querySelectorAll('*[data-bs-toggle-theme]')[0];

            // Set the default theme to 'dark' for the <html> element
            html.setAttribute('data-bs-theme', 'dark');

            // Check if a themeToggle element is found
            if (themeToggle) {
                // Add a click event listener to the themeToggle element
                themeToggle.addEventListener('click', function (event) {
                    // Prevent the default behavior of the click event
                    event.preventDefault();

                    // Check the current theme attribute value of the <html> element
                    if (html.getAttribute('data-bs-theme') === 'dark') {
                        // If the current theme is 'dark', change it to 'light'
                        html.setAttribute('data-bs-theme', 'light');
                    } else {
                        // If the current theme is not 'dark', change it back to 'dark'
                        html.setAttribute('data-bs-theme', 'dark');
                    }
                });
            }
        });
    </script>

    <!-- Add this within your HTML head -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script>
        let dropdowns = document.querySelectorAll('.dropdown-toggle')
        dropdowns.forEach((dd) => {
            dd.addEventListener('click', function (e) {
                var el = this.nextElementSibling
                el.style.display = el.style.display === 'block' ? 'none' : 'block'
            })
        })
    </script>
    }